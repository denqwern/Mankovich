#2. Добавить новое поле finance INTEGER в таблицу bank_accounts значение задать NULL.

ALTER TABLE Bank_accounts ADD COLUMN finance INTEGER NULL;

#3. Вывести первых 10  режиссёров, которые сняли высокобюджетные фильмы. Режиссёры не должны повторяться.

SELECT DISTINCT directors.name, directors.surname, movies.name_movie, movies.budjet FROM directors inner JOIN movies on directors.directors_id == movies.directors_id ORDER by movies.budjet DESC LIMIT 10

#4. Вывести актёров и режиссёров, которые не участвовали не в одном из фильмов.

SELECT actors.name, actors.surname, directors.name, directors.surname FROM actors, directors LEFT JOIN actors_movies ON actors.actors_id == actors_movies.actors_id LEFT JOIN movies ON directors.directors_id == movies.directors_id WHERE movies.directors_id IS NULL AND actors_movies.actors_id IS NULL

#5. Вывести все фильмы, а так же всех актёров кассовые сборы которых превысили 150000000.

SELECT DISTINCT movies.name_movie, actors.surname FROM movies, actors JOIN actors_movies ON movies.movie_id == actors_movies.actors_id AND actors.actors_id == actors_movies.actors_id WHERE movies.budjet <= 150000000

#6. Вывести всех режиссёров которые снимали фильмы до 2000 года. Режиссёры не должны повторятся

SELECT directors.name, directors.surname FROM directors JOIN movies ON directors.directors_id == movies.directors_id WHERE movies.release <=2000

#7. Добавить фильмы для актёров и режиссёров, у которых нет зависимости в таблице movies. Не забыть сделать изменения в таблице actors_movies.

UPDATE movies SET directors_id = 2 WHERE movie_id = 14; #добавить аналогичным способом

#8. Добавить колонку rating к фильмам. Задать значения рейтинга фильмов.

ALTER TABLE movies ADD COLUMN rating TEXT;
UPDATE movies SET rating = "средний" WHERE movie_id = 1;
UPDATE movies SET rating = "выше среднего" WHERE movie_id = 2;
UPDATE movies SET rating = "ниже среднего" WHERE movie_id = 3;
UPDATE movies SET rating = "выше среднего" WHERE movie_id = 4;
UPDATE movies SET rating = "средний" WHERE movie_id = 5;
UPDATE movies SET rating = "средний" WHERE movie_id = 6;
UPDATE movies SET rating = "средний" WHERE movie_id = 7;
UPDATE movies SET rating = "выше среднего" WHERE movie_id = 8;
UPDATE movies SET rating = "средний" WHERE movie_id = 9;
UPDATE movies SET rating = "ниже среднего" WHERE movie_id = 10;
UPDATE movies SET rating = "средний" WHERE movie_id = 11;
UPDATE movies SET rating = "выше среднего" WHERE movie_id = 12;
UPDATE movies SET rating = "средний" WHERE movie_id = 13;
UPDATE movies SET rating = "средний" WHERE movie_id = 14;
UPDATE movies SET rating = "ниже среднего" WHERE movie_id = 15;
UPDATE movies SET rating = "выше среднего" WHERE movie_id = 16;
UPDATE movies SET rating = "средний" WHERE movie_id = 17;
UPDATE movies SET rating = "средний" WHERE movie_id = 18;
UPDATE movies SET rating = "ниже среднего" WHERE movie_id = 19;

#9. Вывести режиссёров и фильмы с рейтингом ниже среднего до 2000 года

SELECT directors.surname, movies.name_movie FROM directors JOIN actors_movies ON movies.movie_id == actors_movies.movies_id JOIN movies ON directors.directors_id == movies.directors_id WHERE movies.rating = "ниже среднего" AND movies.release <= 2000

#10. Вывести всех актёров, которые знакомы с 2-мя и более другими актёрами.


